{"version":3,"sources":["components/ContentItem.js","components/ContentsContainer.js","components/filters/category-filter/Cat.js","components/filters/category-filter/CatContainer.js","components/filters/category-filter/FilterCategory.js","components/LeftBar.js","components/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ContentItem","props","react_default","a","createElement","className","src","item","imgUrl","alt","name","substr","length","title","href","url","target","class","ContentsContainer","contents","map","c","components_ContentItem","key","Cat","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","subcatHidden","e","stopPropagation","b","setState","_this2","onClick","toggleVisibilitySubCat","val","catList","category_filter_CatContainer","list","React","Component","CatContainer","tabIndex","category_filter_Cat","returnCat","FilterCategory","fetch","then","data","json","Leftbar","category_filter_FilterCategory","MainContainer","LeftBar","components_ContentsContainer","App","components_MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yNA8BeA,MA5Bf,SAAsBC,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAKC,OAAQC,IAAI,UAAUJ,UAAU,aACrDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yDACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,KAAKG,KAAKC,OAAO,EAAE,MAC9BV,EAAMM,KAAKG,KAAKE,OAAS,KACvBV,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAMM,KAAKG,MAA1B,SAGRR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGU,KAAMb,EAAMM,KAAKQ,IAAKC,OAAO,UAAhC,uBAEId,EAAAC,EAAAC,cAAA,KAAGa,MAAM,4BCPlBC,MAZf,SAA4BjB,GACxB,IAAIkB,EAAWlB,EAAMkB,SAASC,IAAI,SAAAC,GAC9B,OACInB,EAAAC,EAAAC,cAACkB,EAAD,CAAaC,IAAKF,EAAEX,KAAMH,KAAMc,MAGxC,OACAnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACTc,IC0BMK,cAjCb,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3B,KACD+B,MAAQ,CACXC,cAAc,GAHCR,sFAOIS,GAErBA,EAAEC,kBACF,IAAIC,EAAIR,KAAKI,MAAMC,aACnBL,KAAKS,SAAS,CAAEJ,cAAeG,qCAGxB,IAAAE,EAAAV,KACP,OACE1B,EAAAC,EAAAC,cAAA,MAAImC,QAAS,SAAAL,GAAC,OAAII,EAAKE,uBAAuBN,KAC3CN,KAAK3B,MAAMwC,IAAI/B,KAAO,IACrBkB,KAAK3B,MAAMwC,IAAIC,UAAYd,KAAKI,MAAMC,cACpC/B,EAAAC,EAAAC,cAAA,KAAGa,MAAM,wBAEXW,KAAK3B,MAAMwC,IAAIC,SAAWd,KAAKI,MAAMC,cACnC/B,EAAAC,EAAAC,cAAA,KAAGa,MAAM,sBAEbf,EAAAC,EAAAC,cAACuC,EAAD,CACEC,KAAMhB,KAAK3B,MAAMwC,IAAIC,SAAW,GAChCT,aAAcL,KAAKI,MAAMC,uBA3BjBY,IAAMC,WCWTC,MARf,SAAsB9C,GACpB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAMgC,aAAe,SAAW,IAC5ChC,EAAM2C,KAAKxB,IAAI,SAAAC,GAAC,OANvB,SAAmBA,EAAG2B,GACpB,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAKR,IAAKpB,IAKQ6B,CAAU7B,OCoBtB8B,cAzBX,SAAAA,EAAYlD,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACf1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,KAAM3B,KACD+B,MAAQ,CACTU,QAAS,IAHEjB,mFAME,IAAAa,EAAAV,KACjBwB,MAAM,wBACLC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GACFhB,EAAKD,SAAS,CACVK,QAASY,uCAMjB,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACuC,EAAD,CAAcC,KAAMhB,KAAKI,MAAMU,kBApBlBG,IAAMC,WCWpBU,mLARP,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACqD,EAAD,cALMZ,IAAMC,WC4BbY,cA1BX,SAAAA,EAAYzD,GAAO,IAAAwB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,IACfjC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KAAM3B,KACD+B,MAAQ,CACTb,SAAU,IAHCM,mFAME,IAAAa,EAAAV,KACjBwB,MAAM,mBACLC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GACFhB,EAAKD,SAAS,CACVlB,SAAUmC,uCAMlB,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,CAAmBzC,SAAUS,KAAKI,MAAMb,mBArB5B0B,IAAMC,WCUnBe,0LARX,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0D,EAAD,cAJUhB,cCQEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.d2598839.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction ContentItem (props) {\r\n    return (\r\n        <div className=\"col s12 m6 l4 content-item\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <img src={props.item.imgUrl} alt=\"product\" className=\"item-img\"/>\r\n                    <span className=\"card-title\"></span>\r\n                    <button className=\"btn-floating halfway-fab waves-effect waves-light red\">\r\n                        <i className=\"fas fa-heart\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-content\">                        \r\n                    <span>{props.item.name.substr(0,100)}</span>\r\n                    { props.item.name.length > 100 &&\r\n                        <strong title={props.item.name}> ...</strong>\r\n                    }\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a href={props.item.url} target=\"_blank\">\r\n                        Buy from Amazon &nbsp;\r\n                        <i class=\"fas fa-arrow-right\"></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentItem;","import React from 'react';\r\nimport ContentItem from './ContentItem';\r\n\r\nfunction ContentsContainer (props) {\r\n    let contents = props.contents.map(c => {\r\n        return (\r\n            <ContentItem key={c.name} item={c}/>\r\n        );\r\n    })\r\n    return (\r\n    <ul className=\"row contents-container\">\r\n        {contents}\r\n    </ul>);\r\n}\r\n\r\nexport default ContentsContainer;","import React from \"react\";\r\nimport CatContainer from \"./CatContainer\";\r\n\r\nclass Cat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      subcatHidden: false\r\n    };\r\n  }\r\n\r\n  toggleVisibilitySubCat(e) {\r\n    //this.state.subcatHidden =\r\n    e.stopPropagation();\r\n    let b = this.state.subcatHidden;\r\n    this.setState({ subcatHidden: !b });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li onClick={e => this.toggleVisibilitySubCat(e)}>\r\n        {this.props.val.name + ' '}\r\n        {(this.props.val.catList && !this.state.subcatHidden) &&\r\n            <i class=\"fas fa-chevron-down\"></i>\r\n        }\r\n        {(this.props.val.catList && this.state.subcatHidden) &&\r\n            <i class=\"fas fa-chevron-up\"></i>\r\n        }\r\n        <CatContainer\r\n          list={this.props.val.catList || []}\r\n          subcatHidden={this.state.subcatHidden}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cat;\r\n","import React from \"react\";\r\nimport Cat from \"./Cat\";\r\n\r\nfunction returnCat(c, tabIndex) {\r\n  return <Cat val={c} />;\r\n}\r\nfunction CatContainer(props) {\r\n  return (\r\n    <ul className={props.subcatHidden ? \"hidden\" : \"\"}>\r\n      {props.list.map(c => returnCat(c))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default CatContainer;\r\n","import React from 'react';\r\nimport CatContainer from './CatContainer';\r\n\r\nclass FilterCategory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            catList: []\r\n        };\r\n    }\r\n    componentDidMount () {\r\n        fetch('data/categories.json')\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            this.setState({\r\n                catList: data\r\n            })\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"category-filter\">\r\n                <CatContainer list={this.state.catList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterCategory;","import React from 'react';\r\nimport FilterCategory from './filters/category-filter/FilterCategory'\r\n\r\nclass Leftbar extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"leftbar\">\r\n                <FilterCategory />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Leftbar;","import React from 'react';\r\nimport ContentsContainer from './ContentsContainer';\r\nimport LeftBar from './LeftBar';\r\n\r\nclass MainContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contents: []\r\n        };\r\n    }\r\n    componentDidMount () {\r\n        fetch('data/items.json')\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            this.setState({\r\n                contents: data\r\n            })\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <LeftBar />\r\n                <ContentsContainer contents={this.state.contents} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React, { Component } from 'react';\r\nimport MainContainer from './components/MainContainer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MainContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}